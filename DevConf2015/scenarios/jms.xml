<?xml version="1.0" encoding="utf-8"?>
<scenario xmlns="urn:perfcake:scenario:4.0">
   <generator class="DefaultMessageGenerator" threads="${threads:100}">
      <run type="time" value="60000"/>
   </generator>
   <sender class="RequestResponseJmsSender">
      <property name="target" value="jms/queue/PerfCakeQueue"/>
      <property name="responseTarget" value="jms/queue/PerfCakeQueue"/>
      <property name="receivingTimeout" value="10000"/>
      <property name="receiveAttempts" value="1"/>
      <property name="connectionFactory" value="jms/RemoteConnectionFactory"/>
      <property name="username" value="guest"/>
      <property name="password" value="guestp.1"/>
      <property name="responseUsername" value="guest"/>
      <property name="responsePassword" value="guestp.1"/>
      <property name="jndiContextFactory" value="org.jboss.naming.remote.client.InitialContextFactory"/>
      <property name="jndiUrl" value="http-remoting://${server.host:localhost}:8080"/>
      <property name="jndiSecurityPrincipal" value="guest"/>
      <property name="jndiSecurityCredentials" value="guestp.1"/>
      <property name="responseJndiSecurityPrincipal" value="guest"/>
      <property name="responseJndiSecurityCredentials" value="guestp.1"/>
   </sender>
   <reporting>
      <reporter class="ResponseTimeStatsReporter">
         <destination class="ConsoleDestination">
            <period type="time" value="10000"/>
         </destination>
         <destination class="CsvDestination">
            <period type="time" value="500"/>
            <property name="path" value="${perfcake.scenario}-${threads:100}t-response-time-stats-${perfcake.run.nice.timestamp}.csv"/>
         </destination>
         <destination class="ChartDestination">
            <period type="time" value="1000"/>
            <property name="yAxis" value="Response Time [ms]"/>
            <property name="group" value="${perfcake.scenario}_response_time"/>
            <property name="name" value="Response Time (${threads:100} threads)"/>
            <property name="attributes" value="Minimum,Maximum,Average,Result"/>
            <property name="outputDir" value="${perfcake.scenario}-charts"/>
         </destination>
      </reporter>
      <reporter class="ThroughputStatsReporter">
         <destination class="ConsoleDestination">
            <period type="time" value="10000"/>
         </destination>
         <destination class="CsvDestination">
            <period type="time" value="500"/>
            <property name="path" value="${perfcake.scenario}-${threads:100}t-throughput-stats-${perfcake.run.nice.timestamp}.csv"/>
         </destination>
         <destination class="ChartDestination">
            <period type="time" value="1000"/>
            <property name="yAxis" value="Throughput [iterations/s]"/>
            <property name="group" value="${perfcake.scenario}_troughput"/>
            <property name="name" value="Throughput (${threads:100} threads)"/>
            <property name="attributes" value="Minimum,Maximum,Average,Result"/>
            <property name="outputDir" value="${perfcake.scenario}-charts"/>
         </destination>
      </reporter>
      <reporter class="MemoryUsageReporter">
         <property name="agentHostname" value="${server.host:localhost}"/>
         <property name="agentPort" value="8850"/>
         <property name="performGcOnMemoryUsage" value="true"/>
         <destination class="ConsoleDestination">
            <period type="time" value="10000"/>
         </destination>
         <destination class="CsvDestination">
            <period type="time" value="1000"/>
            <property name="path" value="${perfcake.scenario}-${threads:100}t-memory-usage-${perfcake.run.nice.timestamp}.csv"/>
         </destination>
         <destination class="ChartDestination">
            <period type="time" value="1000"/>
            <property name="yAxis" value="Memory [MiB]"/>
            <property name="group" value="${perfcake.scenario}_memory"/>
            <property name="name" value="Memory (${threads:100} threads)"/>
            <property name="attributes" value="Used,Total,Max"/>
            <property name="outputDir" value="${perfcake.scenario}-charts"/>
         </destination>
      </reporter>
   </reporting>
   <messages>
      <message content="I'm a fish!"/>
   </messages>
</scenario>
